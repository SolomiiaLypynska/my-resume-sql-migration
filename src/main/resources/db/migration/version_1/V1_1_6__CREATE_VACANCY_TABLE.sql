DECLARE
    IS_TABLE_EXISTS NUMBER;
    IS_SEQ_EXISTS NUMBER;
BEGIN

SELECT COUNT(1) INTO IS_TABLE_EXISTS
FROM ALL_OBJECTS
WHERE OBJECT_NAME = UPPER('VACANCY')
    AND OBJECT_TYPE = UPPER('TABLE');

SELECT COUNT(1) INTO IS_SEQ_EXISTS
FROM ALL_OBJECTS
WHERE OBJECT_NAME = UPPER('SEQ_VACANCY')
    AND OBJECT_TYPE = UPPER('SEQUENCE');

IF IS_TABLE_EXISTS = 0 THEN
EXECUTE IMMEDIATE q'[
    CREATE TABLE VACANCY (
        VACANCY_ID NUMBER(12, 0) NOT NULL,
        EMPLOYER_ID NUMBER(12, 0) NOT NULL,
        COMPANY_NAME VARCHAR2(250),
        POSITION_TITLE VARCHAR2(250),
        REQUIREMENTS VARCHAR2(250),
        DESCRIPTION VARCHAR2(250),
        ACTIVE NUMBER(1,0) DEFAULT 1,
        CREATED_ON TIMESTAMP DEFAULT SYSTIMESTAMP,
        UPDATED_ON TIMESTAMP,
        CONSTRAINT PK_VACANCY_ID PRIMARY KEY (VACANCY_ID),
        CONSTRAINT FK_EMPLOYER_ID FOREIGN KEY (EMPLOYER_ID) REFERENCES USERS(ID)
        ON DELETE CASCADE)
]';
END IF;

IF IS_SEQ_EXISTS = 0 THEN
EXECUTE IMMEDIATE q'[
    CREATE SEQUENCE SEQ_VACANCY MINVALUE 0 MAXVALUE 999999999999999999
    INCREMENT BY 1 START WITH 1 CACHE 5 NOORDER NOCYCLE
]';
END IF;

END;
/

--trigger for if vacancy;
--vacancy is updated automatically set updated_on.
DECLARE
    IS_TABLE_EXISTS NUMBER;
    IS_TRIGGER_EXISTS NUMBER;
BEGIN

SELECT COUNT(1) INTO IS_TABLE_EXISTS
FROM ALL_OBJECTS
WHERE OBJECT_NAME = UPPER('VACANCY')
    AND OBJECT_TYPE = UPPER('TABLE');

SELECT COUNT(1) INTO IS_TRIGGER_EXISTS
FROM ALL_OBJECTS
WHERE OBJECT_NAME = UPPER('VACANCY_UPDATED_ON_TRG')
    AND OBJECT_TYPE = UPPER('TRIGGER');

IF IS_TRIGGER_EXISTS = 0 AND IS_TABLE_EXISTS = 1 THEN
EXECUTE IMMEDIATE q'[
    CREATE TRIGGER VACANCY_UPDATED_ON_TRG
        BEFORE UPDATE ON VACANCY
        FOR EACH ROW
        BEGIN
            :NEW.UPDATED_ON := SYSTIMESTAMP;
        END;
]';
END IF;

END;
/
